pipeline {
    agent any
     tools {
      jdk 'java17'
    }
    parameters {
      choice(name: 'project', choices: ['bloom', 'login', 'ardor', 'babou', 'eros', 'mars', 'mercury', 'rosetta', 'segment', 'vesta', 'all'], description: '')
    }
    stages {
      stage('Clean Workspace'){
        steps {
          cleanWs()
        }
      }
      stage ('Checkout') {
        steps {
          checkout scm
        }
      }
      stage('Install Newman') {
        steps {
          bat "npm install newman"
          bat "npx newman -v"
          bat "npm install newman-reporter-allure"
          bat "npm install newman-reporter-htmlextra"
        }
      }
      while (!'all' in "${project}") {
      stage('Test ${project}'){
                  echo "single"
                  catchError(buildResult: 'SUCCESS', stageResult: 'FAILURE') {
                      bat "npx newman run postman/${project}API/${project}Api.postman_collection.json --reporters cli,allure,htmlextra --reporter-allure-export allure-results --reporter-htmlextra-export reports/bloomAPI1htmlreport.html"
                      }
                  }
      }
      while ('all' in "${project}") {
      stage('Test all') {
          steps {
              script {
                  def tests = [:]
                  for (f in findFiles(glob: '**postman/*/*.json')) {
                      tests["${f}"] = {
                              stage("${f}") {
                                  catchError(buildResult: 'SUCCESS', stageResult: 'FAILURE') {
                                  bat "npx newman run ${f} --reporters cli,allure,htmlextra --reporter-allure-export allure-results --reporter-htmlextra-export reports/bloomAPI1htmlreport.html"
                              }
                              }
                      }
                  }
                  parallel tests
              }
          }
      }
      }
      stage('Allure Report') {
        steps {
          catchError(buildResult: 'SUCCESS', stageResult: 'FAILURE') {
            allure includeProperties: false, jdk: 'java17', report: 'reports/allure-report', results: [[path: 'allure-results']]
            }
          }
        }
      }       
    }
